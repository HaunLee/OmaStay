name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Set up SSH
      uses: webfactory/ssh-agent@v0.5.4
      with:
        ssh-private-key: ${{ secrets.PRIVATE_KEY }}

    - name: Verify EC2 Host
      run: |
        mkdir -p ~/.ssh
        ssh-keyscan -H ${{ secrets.HOST }} >> ~/.ssh/known_hosts

    - name: Get last commit hash in EC2
      id: ec2_commit_hash
      run: |
        ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.HOST }} "cd /home/ubuntu/OmaStay && git rev-parse HEAD" > ec2_commit_hash.txt
        ec2_commit_hash=$(cat ec2_commit_hash.txt)
        echo "::set-output name=ec2_commit_hash::$ec2_commit_hash"

    - name: Get list of changed files
      id: get_diff
      run: |
        git fetch origin ${{ github.sha }}
        git diff --name-only ${{ steps.ec2_commit_hash.outputs.ec2_commit_hash }} HEAD > changed_files.txt
        cat changed_files.txt

    - name: Transfer changed files to EC2
      run: |
        while IFS= read -r file; do
          rsync -avz -e "ssh -o StrictHostKeyChecking=no" "$file" ubuntu@${{ secrets.HOST }}:/home/ubuntu/OmaStay/"${file}"
        done < changed_files.txt

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '14'

    - name: Install tailwindcss and dependencies
      run: |
        cd src/main/frontend
        npm install
        npm install @popperjs/core@^2.11.8

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4.0.0

    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle

    - name: Grant execute permission for gradlew
      run: chmod u+x gradlew

    - name: Build with Gradle Wrapper
      run: ./gradlew clean build --no-daemon

    - name: Install Docker using convenience script on EC2
      run: |
        ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.HOST }} "curl -fsSL https://get.docker.com -o get-docker.sh && sudo sh get-docker.sh"

    - name: Add ubuntu user to Docker group and restart Docker on EC2
      run: |
        ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.HOST }} << 'EOF'
          sudo usermod -aG docker ubuntu
          sudo systemctl restart docker
          exit
        EOF

    - name: Verify Docker permissions on EC2
      run: ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.HOST }} "docker ps"

    - name: SSH into EC2 and run Docker Compose
      run: |
        ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.HOST }} << 'EOF'
          cd /home/ubuntu/OmaStay
          docker-compose down
          docker-compose up -d --build
        EOF
