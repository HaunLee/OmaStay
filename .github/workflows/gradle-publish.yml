name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.PRIVATE_KEY }}

      - name: Ensure Remote Directory and Permissions
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.HOST }} << 'EOF'
          sudo mkdir -p /home/ubuntu/OmaStay
          sudo chown -R ubuntu:ubuntu /home/ubuntu/OmaStay
          sudo chmod -R 755 /home/ubuntu/OmaStay
          ls -ld /home/ubuntu/OmaStay || echo "Directory was not created properly"
          EOF

      - name: Validate Remote Directory Before SCP
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.HOST }} << 'EOF'
          if [ -d "/home/ubuntu/OmaStay" ]; then echo "Directory exists before SCP"; else echo "Directory does not exist, exiting"; exit 1; fi
          EOF

      - name: Copy files to EC2
        run: |
          echo "Starting SCP..."
          scp -r -o StrictHostKeyChecking=no ./* ubuntu@${{ secrets.HOST }}:/home/ubuntu/OmaStay
          if [ $? -ne 0 ]; then
            echo "SCP failed"
            exit 1
          fi
          echo "SCP completed successfully"

      - name: Validate Remote Directory After SCP
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.HOST }} << 'EOF'
          if [ -d "/home/ubuntu/OmaStay" ]; then echo "Directory exists after SCP"; else echo "Directory does not exist after SCP, exiting"; exit 1; fi
          EOF

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14'

      - name: frontend로 이동
        run: |
          cd src/main/frontend 

      - name: tailwindcss 설치
        run: |
          npm install

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle

      - name: Build with Gradle Wrapper
        run: gradle clean build

      - name: Add user in the Docker group
        run: |
          sudo usermod -aG docker $USER
        
      - name: reload docker session
        run: |
          sudo chmod 666 /var/run/docker.sock

      - name: SSH into EC2 and run Docker Compose
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.HOST }} << 'EOF'
            cd /home/ubuntu/OmaStay
            docker-compose down
            docker-compose up -d --build
          EOF
