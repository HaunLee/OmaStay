name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    timeout-minutes: 60

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Set up SSH
      uses: webfactory/ssh-agent@v0.5.4
      with:
        ssh-private-key: ${{ secrets.PRIVATE_KEY }}

    - name: Copy Nginx config and SSL from EC2
      run: |
        mkdir -p ./nginx/sites-enabled
        mkdir -p ./nginx/ssl/accounts/omastay.duckdns.org
        ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.HOST }} "sudo chmod 644 /home/ubuntu/docker/nginx/certs/live/omastay.duckdns.org-0001/privkey.pem"
        scp -o StrictHostKeyChecking=no ubuntu@${{ secrets.HOST }}:/etc/nginx/sites-enabled/default ./nginx/sites-enabled/default
        scp -o StrictHostKeyChecking=no ubuntu@${{ secrets.HOST }}:/home/ubuntu/docker/nginx/certs/live/omastay.duckdns.org-0001/fullchain.pem ./nginx/ssl/accounts/omastay.duckdns.org/fullchain.pem
        scp -o StrictHostKeyChecking=no ubuntu@${{ secrets.HOST }}:/home/ubuntu/docker/nginx/certs/live/omastay.duckdns.org-0001/privkey.pem ./nginx/ssl/accounts/omastay.duckdns.org/privkey.pem
        scp -o StrictHostKeyChecking=no ./conf/default.conf ubuntu@${{ secrets.HOST }}:/home/ubuntu/default.conf
        ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.HOST }} "sudo mv /home/ubuntu/default.conf /etc/nginx/conf.d/default.conf"
      continue-on-error: false

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '14'

    - name: Install tailwindcss and dependencies
      run: |
        cd src/main/frontend
        npm install
        npm install @popperjs/core@^2.11.8

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4.0.0

    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle

    - name: Grant execute permission for gradlew
      run: chmod u+x gradlew

    - name: Build with Gradle Wrapper
      run: ./gradlew clean build

    - name: Install Docker using convenience script on EC2
      run: |
        ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.HOST }} "curl -fsSL https://get.docker.com -o get-docker.sh && sudo sh get-docker.sh"

    - name: Add ubuntu user to Docker group and restart Docker on EC2
      run: |
        ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.HOST }} << 'EOF'
          sudo usermod -aG docker ubuntu
          sudo systemctl restart docker
          exit
        EOF

    - name: Verify Docker permissions on EC2
      run: |
        ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.HOST }} "docker ps"

    - name: SSH into EC2 and run Docker Compose
      run: |
        ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.HOST }} << 'EOF'
          cd /home/ubuntu/OmaStay
          docker-compose down
          docker-compose up -d --build
        EOF
