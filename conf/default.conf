# HTTP 요청을 HTTPS로 리디렉션
server {
    listen 80;
    listen [::]:80;

    server_name omastay.duckdns.org www.omastay.duckdns.org;

    client_max_body_size 20M;  # 파일 업로드 최대 크기 설정

    # HTTP 요청을 HTTPS로 리디렉션
    return 301 https://$host$request_uri;
}

# HTTPS 요청 처리
server {
    listen 443 ssl;
    listen [::]:443 ssl;

    server_name omastay.duckdns.org www.omastay.duckdns.org;

    # SSL 인증서 경로 
    ssl_certificate /etc/nginx/certs/omastay.duckdns.org.crt;  # 환경 변수로 SSL 인증서 경로
    ssl_certificate_key /etc/nginx/certs/omastay.duckdns.org.key;  # 환경 변수로 SSL 인증서 키 경로
    ssl_protocols TLSv1.2 TLSv1.3;  # 사용 가능한 SSL/TLS 프로토콜
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:...';  # 안전한 암호화 설정
    ssl_prefer_server_ciphers on;

    client_max_body_size 20M;  # 파일 업로드 최대 크기 설정

    # 리버스 프록시 설정 (백엔드 애플리케이션으로 요청 전달)
    location / {
        proxy_pass http://backend:9090;  # backend 서비스로 요청 전달
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_buffering on;  # 업스트림 버퍼링 활성화
        proxy_buffers 16 4k;  # 버퍼 크기 설정
        proxy_buffer_size 8k;  # 버퍼 사이즈 설정
    }
}

# 잘못된 요청에 대해 403 오류 응답
server {
    listen 80 default_server;
    listen [::]:80 default_server;

    server_name _;

    return 403;
}
