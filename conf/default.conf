server {
    listen 80;
    listen [::]:80;
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    
    server_name omastay.duckdns.org www.omastay.duckdns.org;

    client_max_body_size 10M;

    location / {
        proxy_pass http://backend:9090;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_proxied any;
    gzip_comp_level 6;

    # SSL 설정 (Let's Encrypt 예제)
    ssl_certificate /etc/nginx/ssl/cert.pem;
    ssl_certificate_key /etc/nginx/ssl/key.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256';
}

# 여기는 클라이언트 요청을 백엔드 서버로 전달하는 역할을 함
# - proxy_pass http://backend:9090;
#   : 요청을 http://backend:9090 서버로 전달

# - proxy_set_header X-Real-IP $remote_addr;
#   : 헤더에 X-Real-IP라는 헤더를 추가하고, 클라이언트의 실제 IP 주소를 포함

# - proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#   : 헤더의 X-Forwarded-For속성에 클라이언트의 IP 주소를 추가함

# - proxy_set_header X-Forwarded-Proto $scheme;
#   : 헤더의 X-Forwarded-Proto속성에 클라이언트의 원래 요sudo docker run -it --rm --name certbot \
